'''
Логические выражения и операторы Python. NoneType. Тернарные операторы, маржовые операторы. Boolean Type
'''

'''================= Boolean Type =================='''
# boolean -> неизменяемый тип данных
# имеет только два значения True -> да (истина) False -> нет (ложь)

# bool()

# print(bool(0)) # False
# print(bool(1)) # True
# print(bool(10)) # True
# print(bool(-4363)) # True

# print(bool('hello')) # True
# print(bool(' ')) # True
# print(bool('')) # False

# bool(True) #True
# bool(False) #False
# bool('True') #True
# bool('False') #True

# print(bool(None)) #False

'''
логические выражения -> (выражения, которые возвращают True, если правда и False - если ложь) это выражения результатом вычисления которых может быть только булевые значения
'''
# 4 == 2 # False

'''============= Логические операторы ============='''

# == -> сравнение
5 == 5 # True
6 == '6' # False
4 == 5 # False

# != -> не равно
5 != 8 #True
5 != 5 #False

# > -> больше
5 > 9 # False
5 > 3 # True
5 > 5 # False

# < -> меньше
4 < 10 #True
10 < 5 #False
10 < 10 #False

# >= -> больше или равно
5 >= 10 # False
5 >= 3 # True
5 >= 5 # True

# <= -> меньше или равно
5 <= 10 # True
5 <= 4 # False
5 <= 5 # True

'''======== And or not ========='''
# 1. and -> логическое и
# 2. or -> логическое или
# 3. not -Ю логическое отрицание


# and         используются для объединения 
# or             логических выражений  

a = 5
b = 6

a == 5 and b == 6 # True (правая сторона возвращает True, левая тоже True)
a == 4 and b == 6 # False (правая сторона Fasle, левая True) 
a == 4 and b == 5 # False (обе части False)

# если обе части выражения возвращают True, то все выражение True
# если хотябы одна часть возвращает  False, то все выражение False

# + + ->  +
# + - -> -


a == 5 or b == 6 # True 
a == 5 or b == 5 # True
a == 4 or b == 4 # False
# если хотя бы одна часть выражения True ->  то все выражение True


'''Отрицание not'''
#  превращает правду а ложь, ложь в правду
not True # False
not False # True

not a == 5 #False
not b == 7 #True
not b != 9 #False

# Операторы идентификации
# 1. in -> Проверяет наличие элемента
# 2. сравнение 
#   a. == -> сравнение по значению
#   b. is -> сравнение по ячейке памяти

# print(5 == 5)
# print(5 is 5)
# a = 'hello'
# b = a.lower()
# print(a, b)
# print(id(a), id(b))
# print(a is b)

# a = 'hello.'

# if '.' in a:
#     print('есть')
# else:
#     print('нет')

'''=========== None Type ============'''
# None -> неизменяемый тип данных, с одним значением None. Используется для обозначения пустоты или пустого значения

# bool(None) # False
# bool('None') # True

# a = None
# b = True
# print(a is None) #True
# print(b is True) #True


'''========== Условные операторы =========='''
# нужны для того, чтобы при разных входных данных код работал по разному

int1 = 15
int2 = 15

# Синтаксис:

# if условие1:
    # код
    # будет работать только если условие1 True

# if int1 < int2:
#     print('первое число больше')

'''=========================='''

# if условие1:
    # код
    # будет работать только если условие1 True 
# elif условие2:
    # код
    # будет работать только если условие1 False,а условие2 True

# if int1 < int2:
#     print('int2')
# elif int1 > int2:
#     print('int1')

'''=========================='''

# if условие1:
    # код
    # будет работать только если условие1 True 
# elif условие2:
    # код
    # будет работать только если условие1 False,а условие2 True
# else:
    # код 
    # будет работать только если условие1 и условие2 False (во всех остальных случаях)

# if int1 < int2:
#     print('int2')
# elif int1 > int2:
#     print('int1')
# else:
#     print('int1 = int2')


# в одной конструкции может быть только один if
# в одной конструкции может быть неограниченное кол-во elif или не использовать вообще, elif не может существовать без if
# else можно использовать один раз, условие не указывается



'''Запросим у пользователя возраст и проверим на совершеннолетие'''

# age = int(input('введите свой возраст: '))

# if age >= 18:
#     print('Вы проходите')
# else:
#     print('доступ закрыт')


'''четное/нечестное'''
num = int(input('введите число: '))
# print(type(num))

'''1'''
if num % 2:
    print('Нечетное')
else:
    print('четное')

'''2'''
if num % 2 == 0:
    print('четное')
elif num % 2 == 1:
    print('нечетное')

'''3'''
if num % 2 == 0:
    print('четное')
else:
    print('нечетное')